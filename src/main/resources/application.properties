#MongoDB
spring.data.mongodb.uri=mongodb+srv://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}/emailService
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG

#App Config
spring.application.name=emailRequestReceiver
email.api.queue.singleTopic=emailSingleRequestReceiver4
email.api.queue.batchTopic=emailBatchRequestReceiver4
email.api.queue.sandBox=emailSandboxRequestReceiver4


#Kafka Producer configuration
#spring.kafka.bootstrap-servers=localhost:9093
spring.kafka.bootstrap-servers=${KAFKA_BROKER_HOST}
spring.kafka.producer.bootstrap-servers=${KAFKA_BROKER_HOST}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# SCRAM
#spring.kafka.producer.properties.security.protocol=SASL_SSL
#spring.kafka.producer.properties.sasl.mechanism=SCRAM-SHA-256
#spring.kafka.producer.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKA_USERNAME}" password="${KAFKA_PASSWORD}";

# AWS
spring.kafka.producer.properties.security.protocol=SASL_SSL
spring.kafka.producer.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.producer.properties.sasl.jaas.config = software.amazon.msk.auth.iam.IAMLoginModule required awsProfileName="awsmsk";
spring.kafka.producer.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler