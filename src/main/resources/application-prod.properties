# App Config
spring.application.name=emailRequestReceiver
email.api.queue.singleTopic=${EMAIL_REQUEST_TOPIC_SINGLE}
email.api.queue.batchTopic=${EMAIL_REQUEST_TOPIC_BATCH}
email.api.queue.sandBox=${EMAIL_REQUEST_TOPIC_SANDBOX}

# MongoDB
spring.data.mongodb.uri=mongodb+srv://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}/emailService?retryWrites=true&w=majority&ssl=true
#logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG

# Kafka Producer configuration
spring.kafka.bootstrap-servers=${KAFKA_BROKER_HOST}
spring.kafka.producer.bootstrap-servers=${KAFKA_BROKER_HOST}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# AWS
spring.kafka.producer.properties.security.protocol=SASL_SSL
spring.kafka.producer.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.producer.properties.sasl.jaas.config = software.amazon.msk.auth.iam.IAMLoginModule required;
spring.kafka.producer.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler

# Redis
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
