/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 33.0, "minX": 0.0, "maxY": 2610.0, "series": [{"data": [[0.0, 33.0], [0.1, 67.0], [0.2, 70.0], [0.3, 76.0], [0.4, 80.0], [0.5, 89.0], [0.6, 92.0], [0.7, 98.0], [0.8, 101.0], [0.9, 103.0], [1.0, 103.0], [1.1, 104.0], [1.2, 106.0], [1.3, 111.0], [1.4, 118.0], [1.5, 125.0], [1.6, 129.0], [1.7, 134.0], [1.8, 139.0], [1.9, 142.0], [2.0, 146.0], [2.1, 148.0], [2.2, 150.0], [2.3, 152.0], [2.4, 153.0], [2.5, 154.0], [2.6, 155.0], [2.7, 157.0], [2.8, 158.0], [2.9, 160.0], [3.0, 161.0], [3.1, 163.0], [3.2, 175.0], [3.3, 182.0], [3.4, 187.0], [3.5, 193.0], [3.6, 202.0], [3.7, 208.0], [3.8, 214.0], [3.9, 222.0], [4.0, 233.0], [4.1, 240.0], [4.2, 245.0], [4.3, 252.0], [4.4, 261.0], [4.5, 265.0], [4.6, 269.0], [4.7, 277.0], [4.8, 280.0], [4.9, 282.0], [5.0, 290.0], [5.1, 293.0], [5.2, 296.0], [5.3, 301.0], [5.4, 309.0], [5.5, 312.0], [5.6, 324.0], [5.7, 329.0], [5.8, 336.0], [5.9, 344.0], [6.0, 349.0], [6.1, 356.0], [6.2, 360.0], [6.3, 370.0], [6.4, 373.0], [6.5, 379.0], [6.6, 381.0], [6.7, 382.0], [6.8, 383.0], [6.9, 384.0], [7.0, 387.0], [7.1, 391.0], [7.2, 394.0], [7.3, 396.0], [7.4, 397.0], [7.5, 399.0], [7.6, 401.0], [7.7, 405.0], [7.8, 409.0], [7.9, 412.0], [8.0, 420.0], [8.1, 427.0], [8.2, 436.0], [8.3, 444.0], [8.4, 447.0], [8.5, 450.0], [8.6, 452.0], [8.7, 454.0], [8.8, 459.0], [8.9, 463.0], [9.0, 464.0], [9.1, 466.0], [9.2, 467.0], [9.3, 468.0], [9.4, 469.0], [9.5, 470.0], [9.6, 471.0], [9.7, 473.0], [9.8, 474.0], [9.9, 477.0], [10.0, 478.0], [10.1, 485.0], [10.2, 493.0], [10.3, 495.0], [10.4, 499.0], [10.5, 501.0], [10.6, 502.0], [10.7, 505.0], [10.8, 507.0], [10.9, 509.0], [11.0, 512.0], [11.1, 513.0], [11.2, 515.0], [11.3, 519.0], [11.4, 522.0], [11.5, 524.0], [11.6, 524.0], [11.7, 525.0], [11.8, 528.0], [11.9, 529.0], [12.0, 531.0], [12.1, 535.0], [12.2, 538.0], [12.3, 540.0], [12.4, 542.0], [12.5, 543.0], [12.6, 544.0], [12.7, 545.0], [12.8, 546.0], [12.9, 549.0], [13.0, 551.0], [13.1, 552.0], [13.2, 553.0], [13.3, 555.0], [13.4, 558.0], [13.5, 561.0], [13.6, 569.0], [13.7, 572.0], [13.8, 574.0], [13.9, 575.0], [14.0, 576.0], [14.1, 582.0], [14.2, 587.0], [14.3, 590.0], [14.4, 593.0], [14.5, 595.0], [14.6, 598.0], [14.7, 599.0], [14.8, 601.0], [14.9, 603.0], [15.0, 604.0], [15.1, 606.0], [15.2, 608.0], [15.3, 610.0], [15.4, 610.0], [15.5, 613.0], [15.6, 616.0], [15.7, 619.0], [15.8, 621.0], [15.9, 623.0], [16.0, 624.0], [16.1, 626.0], [16.2, 629.0], [16.3, 629.0], [16.4, 631.0], [16.5, 632.0], [16.6, 635.0], [16.7, 639.0], [16.8, 641.0], [16.9, 643.0], [17.0, 644.0], [17.1, 646.0], [17.2, 647.0], [17.3, 648.0], [17.4, 649.0], [17.5, 651.0], [17.6, 652.0], [17.7, 654.0], [17.8, 655.0], [17.9, 656.0], [18.0, 657.0], [18.1, 660.0], [18.2, 664.0], [18.3, 665.0], [18.4, 668.0], [18.5, 670.0], [18.6, 673.0], [18.7, 675.0], [18.8, 679.0], [18.9, 681.0], [19.0, 688.0], [19.1, 691.0], [19.2, 693.0], [19.3, 695.0], [19.4, 697.0], [19.5, 699.0], [19.6, 701.0], [19.7, 703.0], [19.8, 705.0], [19.9, 708.0], [20.0, 710.0], [20.1, 711.0], [20.2, 713.0], [20.3, 716.0], [20.4, 719.0], [20.5, 720.0], [20.6, 722.0], [20.7, 726.0], [20.8, 729.0], [20.9, 731.0], [21.0, 733.0], [21.1, 735.0], [21.2, 737.0], [21.3, 739.0], [21.4, 741.0], [21.5, 742.0], [21.6, 743.0], [21.7, 745.0], [21.8, 747.0], [21.9, 750.0], [22.0, 752.0], [22.1, 756.0], [22.2, 758.0], [22.3, 760.0], [22.4, 762.0], [22.5, 764.0], [22.6, 766.0], [22.7, 769.0], [22.8, 771.0], [22.9, 772.0], [23.0, 775.0], [23.1, 777.0], [23.2, 779.0], [23.3, 780.0], [23.4, 784.0], [23.5, 787.0], [23.6, 788.0], [23.7, 789.0], [23.8, 791.0], [23.9, 794.0], [24.0, 795.0], [24.1, 797.0], [24.2, 800.0], [24.3, 801.0], [24.4, 802.0], [24.5, 804.0], [24.6, 806.0], [24.7, 808.0], [24.8, 809.0], [24.9, 812.0], [25.0, 815.0], [25.1, 817.0], [25.2, 819.0], [25.3, 825.0], [25.4, 827.0], [25.5, 829.0], [25.6, 831.0], [25.7, 832.0], [25.8, 834.0], [25.9, 836.0], [26.0, 838.0], [26.1, 839.0], [26.2, 842.0], [26.3, 844.0], [26.4, 844.0], [26.5, 846.0], [26.6, 848.0], [26.7, 850.0], [26.8, 851.0], [26.9, 854.0], [27.0, 856.0], [27.1, 857.0], [27.2, 860.0], [27.3, 863.0], [27.4, 865.0], [27.5, 867.0], [27.6, 869.0], [27.7, 871.0], [27.8, 874.0], [27.9, 876.0], [28.0, 877.0], [28.1, 879.0], [28.2, 881.0], [28.3, 882.0], [28.4, 883.0], [28.5, 885.0], [28.6, 886.0], [28.7, 887.0], [28.8, 889.0], [28.9, 892.0], [29.0, 894.0], [29.1, 895.0], [29.2, 896.0], [29.3, 897.0], [29.4, 899.0], [29.5, 902.0], [29.6, 903.0], [29.7, 905.0], [29.8, 907.0], [29.9, 909.0], [30.0, 912.0], [30.1, 913.0], [30.2, 914.0], [30.3, 916.0], [30.4, 918.0], [30.5, 923.0], [30.6, 925.0], [30.7, 928.0], [30.8, 932.0], [30.9, 936.0], [31.0, 941.0], [31.1, 944.0], [31.2, 946.0], [31.3, 949.0], [31.4, 953.0], [31.5, 955.0], [31.6, 957.0], [31.7, 958.0], [31.8, 960.0], [31.9, 961.0], [32.0, 963.0], [32.1, 966.0], [32.2, 968.0], [32.3, 969.0], [32.4, 973.0], [32.5, 976.0], [32.6, 979.0], [32.7, 983.0], [32.8, 984.0], [32.9, 986.0], [33.0, 987.0], [33.1, 990.0], [33.2, 991.0], [33.3, 993.0], [33.4, 997.0], [33.5, 1000.0], [33.6, 1003.0], [33.7, 1006.0], [33.8, 1007.0], [33.9, 1010.0], [34.0, 1013.0], [34.1, 1014.0], [34.2, 1018.0], [34.3, 1019.0], [34.4, 1021.0], [34.5, 1023.0], [34.6, 1024.0], [34.7, 1026.0], [34.8, 1030.0], [34.9, 1031.0], [35.0, 1033.0], [35.1, 1034.0], [35.2, 1035.0], [35.3, 1038.0], [35.4, 1042.0], [35.5, 1044.0], [35.6, 1048.0], [35.7, 1052.0], [35.8, 1054.0], [35.9, 1057.0], [36.0, 1060.0], [36.1, 1064.0], [36.2, 1065.0], [36.3, 1066.0], [36.4, 1068.0], [36.5, 1068.0], [36.6, 1070.0], [36.7, 1072.0], [36.8, 1073.0], [36.9, 1075.0], [37.0, 1077.0], [37.1, 1083.0], [37.2, 1085.0], [37.3, 1088.0], [37.4, 1089.0], [37.5, 1099.0], [37.6, 1103.0], [37.7, 1108.0], [37.8, 1111.0], [37.9, 1112.0], [38.0, 1116.0], [38.1, 1116.0], [38.2, 1118.0], [38.3, 1121.0], [38.4, 1124.0], [38.5, 1126.0], [38.6, 1128.0], [38.7, 1130.0], [38.8, 1131.0], [38.9, 1134.0], [39.0, 1136.0], [39.1, 1138.0], [39.2, 1141.0], [39.3, 1142.0], [39.4, 1143.0], [39.5, 1145.0], [39.6, 1147.0], [39.7, 1148.0], [39.8, 1151.0], [39.9, 1153.0], [40.0, 1154.0], [40.1, 1157.0], [40.2, 1158.0], [40.3, 1161.0], [40.4, 1163.0], [40.5, 1167.0], [40.6, 1170.0], [40.7, 1172.0], [40.8, 1173.0], [40.9, 1174.0], [41.0, 1176.0], [41.1, 1177.0], [41.2, 1178.0], [41.3, 1180.0], [41.4, 1182.0], [41.5, 1184.0], [41.6, 1184.0], [41.7, 1185.0], [41.8, 1186.0], [41.9, 1187.0], [42.0, 1189.0], [42.1, 1191.0], [42.2, 1193.0], [42.3, 1195.0], [42.4, 1196.0], [42.5, 1198.0], [42.6, 1198.0], [42.7, 1201.0], [42.8, 1201.0], [42.9, 1204.0], [43.0, 1205.0], [43.1, 1208.0], [43.2, 1209.0], [43.3, 1210.0], [43.4, 1211.0], [43.5, 1212.0], [43.6, 1213.0], [43.7, 1214.0], [43.8, 1214.0], [43.9, 1214.0], [44.0, 1216.0], [44.1, 1216.0], [44.2, 1218.0], [44.3, 1219.0], [44.4, 1220.0], [44.5, 1222.0], [44.6, 1223.0], [44.7, 1225.0], [44.8, 1226.0], [44.9, 1229.0], [45.0, 1231.0], [45.1, 1233.0], [45.2, 1234.0], [45.3, 1234.0], [45.4, 1235.0], [45.5, 1236.0], [45.6, 1236.0], [45.7, 1237.0], [45.8, 1238.0], [45.9, 1239.0], [46.0, 1241.0], [46.1, 1242.0], [46.2, 1243.0], [46.3, 1244.0], [46.4, 1245.0], [46.5, 1246.0], [46.6, 1246.0], [46.7, 1247.0], [46.8, 1247.0], [46.9, 1248.0], [47.0, 1248.0], [47.1, 1249.0], [47.2, 1250.0], [47.3, 1251.0], [47.4, 1251.0], [47.5, 1252.0], [47.6, 1254.0], [47.7, 1255.0], [47.8, 1256.0], [47.9, 1257.0], [48.0, 1258.0], [48.1, 1260.0], [48.2, 1260.0], [48.3, 1261.0], [48.4, 1262.0], [48.5, 1263.0], [48.6, 1263.0], [48.7, 1265.0], [48.8, 1266.0], [48.9, 1267.0], [49.0, 1268.0], [49.1, 1269.0], [49.2, 1270.0], [49.3, 1271.0], [49.4, 1273.0], [49.5, 1273.0], [49.6, 1274.0], [49.7, 1275.0], [49.8, 1275.0], [49.9, 1275.0], [50.0, 1276.0], [50.1, 1277.0], [50.2, 1277.0], [50.3, 1278.0], [50.4, 1280.0], [50.5, 1281.0], [50.6, 1282.0], [50.7, 1283.0], [50.8, 1284.0], [50.9, 1284.0], [51.0, 1286.0], [51.1, 1287.0], [51.2, 1288.0], [51.3, 1289.0], [51.4, 1290.0], [51.5, 1291.0], [51.6, 1291.0], [51.7, 1292.0], [51.8, 1293.0], [51.9, 1294.0], [52.0, 1295.0], [52.1, 1295.0], [52.2, 1296.0], [52.3, 1296.0], [52.4, 1297.0], [52.5, 1298.0], [52.6, 1299.0], [52.7, 1300.0], [52.8, 1301.0], [52.9, 1302.0], [53.0, 1303.0], [53.1, 1303.0], [53.2, 1304.0], [53.3, 1305.0], [53.4, 1306.0], [53.5, 1307.0], [53.6, 1307.0], [53.7, 1308.0], [53.8, 1308.0], [53.9, 1310.0], [54.0, 1310.0], [54.1, 1311.0], [54.2, 1312.0], [54.3, 1313.0], [54.4, 1313.0], [54.5, 1315.0], [54.6, 1316.0], [54.7, 1316.0], [54.8, 1317.0], [54.9, 1318.0], [55.0, 1319.0], [55.1, 1321.0], [55.2, 1322.0], [55.3, 1323.0], [55.4, 1324.0], [55.5, 1325.0], [55.6, 1326.0], [55.7, 1327.0], [55.8, 1328.0], [55.9, 1330.0], [56.0, 1331.0], [56.1, 1332.0], [56.2, 1334.0], [56.3, 1334.0], [56.4, 1334.0], [56.5, 1335.0], [56.6, 1337.0], [56.7, 1337.0], [56.8, 1338.0], [56.9, 1339.0], [57.0, 1339.0], [57.1, 1340.0], [57.2, 1340.0], [57.3, 1340.0], [57.4, 1341.0], [57.5, 1342.0], [57.6, 1342.0], [57.7, 1342.0], [57.8, 1343.0], [57.9, 1343.0], [58.0, 1344.0], [58.1, 1345.0], [58.2, 1345.0], [58.3, 1347.0], [58.4, 1349.0], [58.5, 1350.0], [58.6, 1351.0], [58.7, 1352.0], [58.8, 1354.0], [58.9, 1355.0], [59.0, 1356.0], [59.1, 1357.0], [59.2, 1357.0], [59.3, 1358.0], [59.4, 1358.0], [59.5, 1359.0], [59.6, 1360.0], [59.7, 1360.0], [59.8, 1362.0], [59.9, 1364.0], [60.0, 1365.0], [60.1, 1366.0], [60.2, 1366.0], [60.3, 1368.0], [60.4, 1368.0], [60.5, 1368.0], [60.6, 1369.0], [60.7, 1369.0], [60.8, 1370.0], [60.9, 1370.0], [61.0, 1370.0], [61.1, 1371.0], [61.2, 1371.0], [61.3, 1372.0], [61.4, 1372.0], [61.5, 1373.0], [61.6, 1373.0], [61.7, 1374.0], [61.8, 1374.0], [61.9, 1375.0], [62.0, 1376.0], [62.1, 1376.0], [62.2, 1377.0], [62.3, 1377.0], [62.4, 1377.0], [62.5, 1377.0], [62.6, 1378.0], [62.7, 1378.0], [62.8, 1378.0], [62.9, 1378.0], [63.0, 1379.0], [63.1, 1379.0], [63.2, 1379.0], [63.3, 1379.0], [63.4, 1380.0], [63.5, 1380.0], [63.6, 1381.0], [63.7, 1381.0], [63.8, 1381.0], [63.9, 1382.0], [64.0, 1382.0], [64.1, 1382.0], [64.2, 1383.0], [64.3, 1383.0], [64.4, 1383.0], [64.5, 1383.0], [64.6, 1384.0], [64.7, 1384.0], [64.8, 1384.0], [64.9, 1385.0], [65.0, 1385.0], [65.1, 1385.0], [65.2, 1386.0], [65.3, 1386.0], [65.4, 1386.0], [65.5, 1387.0], [65.6, 1387.0], [65.7, 1387.0], [65.8, 1388.0], [65.9, 1388.0], [66.0, 1389.0], [66.1, 1389.0], [66.2, 1390.0], [66.3, 1391.0], [66.4, 1391.0], [66.5, 1392.0], [66.6, 1393.0], [66.7, 1394.0], [66.8, 1395.0], [66.9, 1396.0], [67.0, 1397.0], [67.1, 1397.0], [67.2, 1398.0], [67.3, 1399.0], [67.4, 1399.0], [67.5, 1401.0], [67.6, 1401.0], [67.7, 1402.0], [67.8, 1402.0], [67.9, 1403.0], [68.0, 1404.0], [68.1, 1405.0], [68.2, 1405.0], [68.3, 1406.0], [68.4, 1407.0], [68.5, 1407.0], [68.6, 1408.0], [68.7, 1408.0], [68.8, 1409.0], [68.9, 1409.0], [69.0, 1409.0], [69.1, 1410.0], [69.2, 1410.0], [69.3, 1411.0], [69.4, 1412.0], [69.5, 1412.0], [69.6, 1413.0], [69.7, 1414.0], [69.8, 1414.0], [69.9, 1415.0], [70.0, 1416.0], [70.1, 1417.0], [70.2, 1417.0], [70.3, 1417.0], [70.4, 1417.0], [70.5, 1418.0], [70.6, 1418.0], [70.7, 1419.0], [70.8, 1419.0], [70.9, 1420.0], [71.0, 1420.0], [71.1, 1421.0], [71.2, 1421.0], [71.3, 1421.0], [71.4, 1421.0], [71.5, 1422.0], [71.6, 1422.0], [71.7, 1422.0], [71.8, 1423.0], [71.9, 1423.0], [72.0, 1423.0], [72.1, 1423.0], [72.2, 1424.0], [72.3, 1424.0], [72.4, 1424.0], [72.5, 1424.0], [72.6, 1425.0], [72.7, 1425.0], [72.8, 1425.0], [72.9, 1425.0], [73.0, 1426.0], [73.1, 1426.0], [73.2, 1426.0], [73.3, 1427.0], [73.4, 1427.0], [73.5, 1427.0], [73.6, 1428.0], [73.7, 1428.0], [73.8, 1428.0], [73.9, 1429.0], [74.0, 1429.0], [74.1, 1430.0], [74.2, 1431.0], [74.3, 1432.0], [74.4, 1433.0], [74.5, 1433.0], [74.6, 1434.0], [74.7, 1434.0], [74.8, 1434.0], [74.9, 1435.0], [75.0, 1435.0], [75.1, 1436.0], [75.2, 1436.0], [75.3, 1436.0], [75.4, 1437.0], [75.5, 1438.0], [75.6, 1439.0], [75.7, 1439.0], [75.8, 1440.0], [75.9, 1441.0], [76.0, 1441.0], [76.1, 1442.0], [76.2, 1443.0], [76.3, 1444.0], [76.4, 1444.0], [76.5, 1445.0], [76.6, 1445.0], [76.7, 1445.0], [76.8, 1446.0], [76.9, 1446.0], [77.0, 1447.0], [77.1, 1448.0], [77.2, 1448.0], [77.3, 1448.0], [77.4, 1449.0], [77.5, 1450.0], [77.6, 1451.0], [77.7, 1451.0], [77.8, 1452.0], [77.9, 1453.0], [78.0, 1453.0], [78.1, 1453.0], [78.2, 1454.0], [78.3, 1454.0], [78.4, 1455.0], [78.5, 1455.0], [78.6, 1455.0], [78.7, 1456.0], [78.8, 1456.0], [78.9, 1456.0], [79.0, 1457.0], [79.1, 1458.0], [79.2, 1459.0], [79.3, 1459.0], [79.4, 1460.0], [79.5, 1461.0], [79.6, 1461.0], [79.7, 1462.0], [79.8, 1462.0], [79.9, 1463.0], [80.0, 1463.0], [80.1, 1463.0], [80.2, 1464.0], [80.3, 1464.0], [80.4, 1465.0], [80.5, 1466.0], [80.6, 1467.0], [80.7, 1467.0], [80.8, 1468.0], [80.9, 1468.0], [81.0, 1470.0], [81.1, 1471.0], [81.2, 1472.0], [81.3, 1472.0], [81.4, 1473.0], [81.5, 1474.0], [81.6, 1475.0], [81.7, 1476.0], [81.8, 1477.0], [81.9, 1478.0], [82.0, 1479.0], [82.1, 1480.0], [82.2, 1481.0], [82.3, 1481.0], [82.4, 1482.0], [82.5, 1483.0], [82.6, 1484.0], [82.7, 1485.0], [82.8, 1486.0], [82.9, 1487.0], [83.0, 1487.0], [83.1, 1488.0], [83.2, 1488.0], [83.3, 1489.0], [83.4, 1489.0], [83.5, 1490.0], [83.6, 1491.0], [83.7, 1493.0], [83.8, 1494.0], [83.9, 1494.0], [84.0, 1495.0], [84.1, 1495.0], [84.2, 1496.0], [84.3, 1497.0], [84.4, 1498.0], [84.5, 1498.0], [84.6, 1499.0], [84.7, 1500.0], [84.8, 1502.0], [84.9, 1502.0], [85.0, 1503.0], [85.1, 1504.0], [85.2, 1506.0], [85.3, 1507.0], [85.4, 1508.0], [85.5, 1508.0], [85.6, 1509.0], [85.7, 1510.0], [85.8, 1511.0], [85.9, 1512.0], [86.0, 1513.0], [86.1, 1515.0], [86.2, 1516.0], [86.3, 1516.0], [86.4, 1517.0], [86.5, 1517.0], [86.6, 1518.0], [86.7, 1519.0], [86.8, 1519.0], [86.9, 1521.0], [87.0, 1521.0], [87.1, 1522.0], [87.2, 1525.0], [87.3, 1525.0], [87.4, 1526.0], [87.5, 1530.0], [87.6, 1531.0], [87.7, 1532.0], [87.8, 1533.0], [87.9, 1534.0], [88.0, 1536.0], [88.1, 1537.0], [88.2, 1538.0], [88.3, 1538.0], [88.4, 1539.0], [88.5, 1540.0], [88.6, 1541.0], [88.7, 1542.0], [88.8, 1542.0], [88.9, 1543.0], [89.0, 1544.0], [89.1, 1546.0], [89.2, 1547.0], [89.3, 1548.0], [89.4, 1549.0], [89.5, 1550.0], [89.6, 1552.0], [89.7, 1554.0], [89.8, 1557.0], [89.9, 1560.0], [90.0, 1562.0], [90.1, 1563.0], [90.2, 1565.0], [90.3, 1566.0], [90.4, 1568.0], [90.5, 1568.0], [90.6, 1571.0], [90.7, 1572.0], [90.8, 1574.0], [90.9, 1575.0], [91.0, 1577.0], [91.1, 1581.0], [91.2, 1582.0], [91.3, 1582.0], [91.4, 1584.0], [91.5, 1585.0], [91.6, 1587.0], [91.7, 1588.0], [91.8, 1592.0], [91.9, 1593.0], [92.0, 1594.0], [92.1, 1596.0], [92.2, 1598.0], [92.3, 1599.0], [92.4, 1600.0], [92.5, 1601.0], [92.6, 1602.0], [92.7, 1604.0], [92.8, 1606.0], [92.9, 1608.0], [93.0, 1609.0], [93.1, 1610.0], [93.2, 1611.0], [93.3, 1611.0], [93.4, 1613.0], [93.5, 1614.0], [93.6, 1615.0], [93.7, 1618.0], [93.8, 1619.0], [93.9, 1621.0], [94.0, 1622.0], [94.1, 1624.0], [94.2, 1628.0], [94.3, 1630.0], [94.4, 1631.0], [94.5, 1632.0], [94.6, 1633.0], [94.7, 1636.0], [94.8, 1637.0], [94.9, 1640.0], [95.0, 1643.0], [95.1, 1644.0], [95.2, 1645.0], [95.3, 1646.0], [95.4, 1647.0], [95.5, 1648.0], [95.6, 1649.0], [95.7, 1651.0], [95.8, 1653.0], [95.9, 1656.0], [96.0, 1658.0], [96.1, 1661.0], [96.2, 1663.0], [96.3, 1667.0], [96.4, 1669.0], [96.5, 1673.0], [96.6, 1674.0], [96.7, 1676.0], [96.8, 1679.0], [96.9, 1680.0], [97.0, 1685.0], [97.1, 1688.0], [97.2, 1690.0], [97.3, 1695.0], [97.4, 1700.0], [97.5, 1703.0], [97.6, 1706.0], [97.7, 1707.0], [97.8, 1710.0], [97.9, 1718.0], [98.0, 1722.0], [98.1, 1725.0], [98.2, 1733.0], [98.3, 1742.0], [98.4, 1744.0], [98.5, 1749.0], [98.6, 1754.0], [98.7, 1758.0], [98.8, 1768.0], [98.9, 1781.0], [99.0, 1793.0], [99.1, 1805.0], [99.2, 1833.0], [99.3, 1846.0], [99.4, 1871.0], [99.5, 1888.0], [99.6, 1938.0], [99.7, 1962.0], [99.8, 2055.0], [99.9, 2141.0]], "isOverall": false, "label": "singleRequest", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 1718.0, "series": [{"data": [[0.0, 72.0], [2100.0, 12.0], [2200.0, 2.0], [600.0, 480.0], [2600.0, 2.0], [700.0, 468.0], [200.0, 174.0], [800.0, 528.0], [900.0, 400.0], [1000.0, 408.0], [1100.0, 512.0], [300.0, 232.0], [1200.0, 1000.0], [1300.0, 1476.0], [1400.0, 1718.0], [1500.0, 774.0], [100.0, 280.0], [400.0, 286.0], [1600.0, 504.0], [1700.0, 168.0], [1800.0, 44.0], [1900.0, 22.0], [500.0, 428.0], [2000.0, 10.0]], "isOverall": false, "label": "singleRequest", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1048.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7424.0, "series": [{"data": [[0.0, 1048.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 7424.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1528.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1408.2809999999922, "minX": 1.72054146E12, "maxY": 1408.2809999999922, "series": [{"data": [[1.72054146E12, 1408.2809999999922]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72054146E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 77.0, "minX": 1.0, "maxY": 2262.0, "series": [{"data": [[2.0, 1720.0], [3.0, 1909.0], [5.0, 1755.0], [6.0, 1602.0], [8.0, 1678.5], [9.0, 1604.0], [10.0, 1722.0], [11.0, 1609.0], [12.0, 1665.0], [13.0, 1610.0], [14.0, 1871.0], [15.0, 1758.0], [16.0, 1726.0], [17.0, 1653.0], [18.0, 1653.0], [19.0, 1604.0], [20.0, 1606.0], [21.0, 1653.0], [22.0, 1609.0], [23.0, 1611.0], [24.0, 1784.0], [25.0, 1710.0], [26.0, 1605.0], [27.0, 1610.0], [28.0, 1652.0], [29.0, 1805.0], [30.0, 1609.0], [33.0, 1606.0], [32.0, 1599.5], [35.0, 1781.0], [34.0, 1610.0], [37.0, 1594.0], [36.0, 1607.0], [39.0, 1609.0], [38.0, 1608.0], [41.0, 1677.0], [43.0, 1707.0], [42.0, 1649.0], [45.0, 1646.0], [44.0, 1730.0], [47.0, 1674.0], [46.0, 1805.0], [49.0, 1606.0], [48.0, 1673.0], [51.0, 1604.0], [50.0, 1755.0], [53.0, 2164.0], [52.0, 1948.0], [55.0, 1666.0], [57.0, 1581.0], [56.0, 1672.0], [59.0, 1605.0], [58.0, 1673.0], [61.0, 1774.0], [60.0, 1582.0], [63.0, 1590.5], [67.0, 1581.0], [66.0, 1600.0], [65.0, 1598.0], [64.0, 1581.0], [71.0, 1925.0], [70.0, 1601.0], [69.0, 1582.0], [68.0, 1752.0], [75.0, 1697.0], [74.0, 1599.0], [73.0, 1614.0], [72.0, 1610.0], [79.0, 1614.0], [78.0, 1613.0], [77.0, 1580.0], [76.0, 1610.0], [83.0, 1611.0], [82.0, 1575.0], [81.0, 1663.0], [87.0, 1612.0], [86.0, 1631.0], [85.0, 1611.0], [84.0, 1695.0], [91.0, 1576.0], [90.0, 1575.0], [89.0, 1671.0], [95.0, 1658.0], [94.0, 1620.0], [93.0, 1738.0], [92.0, 1632.0], [99.0, 1712.0], [98.0, 1679.0], [97.0, 1597.0], [103.0, 1674.0], [101.0, 1647.0], [100.0, 1626.0], [107.0, 1630.0], [106.0, 1632.0], [105.0, 1663.0], [104.0, 1630.0], [111.0, 1631.0], [110.0, 1706.0], [109.0, 1630.0], [108.0, 1566.0], [115.0, 1602.0], [114.0, 1706.0], [113.0, 1713.0], [112.0, 1661.0], [119.0, 1662.0], [118.0, 1662.0], [117.0, 1630.0], [116.0, 1601.0], [123.0, 1725.0], [121.0, 1661.0], [120.0, 1846.0], [127.0, 1707.0], [126.0, 1734.0], [125.0, 1602.0], [124.0, 1709.0], [135.0, 1602.0], [134.0, 1734.0], [133.0, 1601.0], [132.0, 1657.0], [131.0, 1733.0], [130.0, 1628.0], [129.0, 1660.0], [128.0, 1626.0], [143.0, 1655.0], [142.0, 1685.0], [141.0, 1846.0], [140.0, 1600.0], [139.0, 1598.0], [138.0, 1731.0], [137.0, 1652.0], [151.0, 1660.0], [149.0, 1746.0], [148.0, 1621.0], [147.0, 1675.0], [146.0, 1653.0], [145.0, 1679.0], [144.0, 1705.0], [159.0, 1674.0], [158.0, 1619.0], [157.0, 1620.0], [156.0, 1651.0], [155.0, 1874.0], [154.0, 1689.0], [153.0, 1670.0], [167.0, 1616.0], [166.0, 1629.0], [164.0, 1620.0], [163.0, 1871.0], [162.0, 1872.0], [161.0, 1824.5], [175.0, 1701.0], [174.0, 1593.0], [172.0, 1668.0], [171.0, 1694.0], [170.0, 1542.0], [169.0, 1542.0], [168.0, 1942.0], [183.0, 1668.0], [182.0, 1631.0], [180.0, 1718.0], [179.0, 1588.0], [178.0, 1751.0], [177.0, 1637.5], [191.0, 1446.0], [190.0, 1483.0], [189.0, 1574.0], [188.0, 1597.0], [187.0, 1773.0], [186.0, 1543.0], [185.0, 1547.0], [184.0, 1669.0], [199.0, 1444.0], [198.0, 1452.0], [197.0, 1444.0], [196.0, 1441.0], [194.0, 1425.0], [193.0, 1453.0], [192.0, 1427.0], [206.0, 1610.0], [205.0, 1810.5], [203.0, 1448.0], [202.0, 1456.0], [201.0, 1418.0], [200.0, 1445.0], [215.0, 1421.0], [214.0, 1599.0], [213.0, 1512.0], [211.0, 1418.0], [210.0, 1791.5], [208.0, 1539.0], [223.0, 1464.0], [222.0, 1629.0], [220.0, 1418.0], [219.0, 1791.0], [218.0, 1418.0], [217.0, 1422.0], [216.0, 1417.0], [231.0, 1542.0], [229.0, 1461.0], [228.0, 1572.0], [227.0, 1420.0], [226.0, 1462.0], [225.0, 1418.0], [239.0, 1485.0], [238.0, 1759.0], [237.0, 1538.0], [236.0, 1488.0], [235.0, 1420.0], [234.0, 1459.0], [233.0, 1488.0], [232.0, 1459.0], [247.0, 1550.0], [245.0, 1551.0], [243.0, 1933.0], [242.0, 1422.0], [241.0, 1421.0], [240.0, 1422.0], [254.0, 1454.0], [253.0, 1554.5], [251.0, 1429.0], [250.0, 1586.0], [249.0, 1517.0], [248.0, 1426.0], [270.0, 1529.0], [271.0, 1436.0], [269.0, 1474.0], [259.0, 2262.0], [258.0, 1455.0], [257.0, 1482.6666666666665], [267.0, 1498.0], [266.0, 1488.0], [265.0, 1472.5], [263.0, 1517.0], [262.0, 1563.5], [260.0, 1496.0], [287.0, 1754.0], [285.0, 1646.5], [275.0, 1584.0], [274.0, 1433.0], [273.0, 1434.0], [272.0, 1455.0], [283.0, 1557.0], [282.0, 1488.0], [281.0, 1455.0], [280.0, 1539.0], [279.0, 1547.0], [278.0, 1487.0], [277.0, 1428.0], [302.0, 1428.0], [303.0, 1453.0], [301.0, 1450.0], [300.0, 1442.0], [298.0, 1429.0], [297.0, 1428.0], [296.0, 1531.0], [295.0, 1510.0], [289.0, 1489.0], [288.0, 1486.0], [291.0, 1559.0], [290.0, 1429.0], [294.0, 1428.0], [293.0, 1455.0], [292.0, 1533.0], [318.0, 1507.0], [319.0, 1454.0], [317.0, 1560.0], [316.0, 1425.0], [315.0, 1506.0], [314.0, 1508.0], [313.0, 1424.0], [312.0, 1648.0], [311.0, 1562.0], [307.0, 1506.0], [306.0, 1480.6666666666667], [310.0, 1425.0], [309.0, 1460.0], [308.0, 1484.0], [334.0, 1532.0], [335.0, 1479.0], [333.0, 1425.0], [332.0, 1521.0], [331.0, 1426.0], [330.0, 1681.0], [329.0, 1485.0], [328.0, 1532.0], [327.0, 1459.0], [321.0, 1427.0], [320.0, 1426.0], [323.0, 1427.0], [322.0, 1427.0], [326.0, 1427.0], [325.0, 1482.0], [324.0, 1457.0], [350.0, 1455.0], [351.0, 1455.0], [349.0, 1503.0], [348.0, 1480.0], [347.0, 1628.0], [346.0, 1555.0], [345.0, 1500.0], [344.0, 1426.0], [343.0, 1553.0], [337.0, 1649.0], [336.0, 1427.0], [339.0, 1425.0], [338.0, 1500.0], [342.0, 1724.0], [341.0, 1425.0], [340.0, 1478.0], [366.0, 1478.0], [367.0, 1659.0], [365.0, 1506.0], [364.0, 1508.0], [363.0, 1425.0], [362.0, 1451.0], [360.0, 1452.0], [359.0, 1653.0], [352.0, 1505.0], [355.0, 1440.0], [353.0, 1422.0], [358.0, 1423.0], [357.0, 1480.0], [356.0, 1424.0], [381.0, 1425.0], [383.0, 1439.5], [380.0, 1754.0], [371.0, 2141.0], [370.0, 1423.0], [369.0, 1466.5], [379.0, 1427.0], [378.0, 1621.0], [377.0, 1600.0], [375.0, 1454.0], [374.0, 1571.0], [372.0, 1427.0], [398.0, 1546.5], [399.0, 1448.0], [396.0, 1485.0], [387.0, 1454.0], [386.0, 1453.0], [385.0, 1656.0], [384.0, 1677.0], [395.0, 1428.0], [394.0, 1494.0], [393.0, 1475.0], [392.0, 1618.0], [391.0, 1502.0], [390.0, 1427.0], [389.0, 1650.0], [388.0, 1429.0], [414.0, 1472.0], [415.0, 1476.0], [413.0, 1467.0], [412.0, 1447.0], [411.0, 1425.0], [410.0, 1648.0], [409.0, 1449.0], [408.0, 1750.0], [407.0, 1622.0], [402.0, 1448.0], [400.0, 1476.0], [406.0, 1647.0], [405.0, 1622.0], [404.0, 1437.0], [419.0, 1447.0], [429.0, 1594.0], [430.0, 1426.0], [428.0, 1535.5], [418.0, 1482.0], [416.0, 1425.0], [426.0, 1569.5], [424.0, 1692.0], [423.0, 1521.0], [422.0, 1619.0], [421.0, 1448.0], [420.0, 1425.0], [446.0, 1500.0], [447.0, 1424.0], [445.0, 1629.5], [435.0, 1481.0], [433.0, 1668.0], [432.0, 1545.0], [443.0, 1648.0], [442.0, 1495.0], [441.0, 1498.0], [440.0, 1496.0], [439.0, 1424.0], [438.0, 1494.0], [437.0, 1574.5], [461.0, 1441.0], [462.0, 2058.0], [460.0, 1441.0], [451.0, 1859.0], [449.0, 1563.0], [448.0, 1478.0], [459.0, 1652.0], [458.0, 1423.0], [457.0, 1425.0], [456.0, 1424.0], [455.0, 1534.0], [453.0, 1625.0], [452.0, 1568.0], [478.0, 1434.5], [479.0, 1444.0], [476.0, 1421.0], [467.0, 1624.0], [466.0, 2005.0], [465.0, 1424.0], [464.0, 1544.0], [475.0, 1423.0], [474.0, 1641.0], [473.0, 1448.0], [472.0, 1663.0], [471.0, 1549.5], [469.0, 1445.0], [468.0, 1423.0], [494.0, 1473.0], [495.0, 1565.0], [493.0, 1563.0], [492.0, 2081.5], [490.0, 1565.0], [489.0, 1419.0], [488.0, 1421.0], [487.0, 1593.0], [481.0, 1498.0], [480.0, 1644.0], [483.0, 1449.0], [482.0, 1475.0], [486.0, 1575.5], [484.0, 1565.0], [510.0, 394.8333333333333], [511.0, 392.81818181818176], [509.0, 418.29999999999995], [508.0, 628.625], [506.0, 591.75], [505.0, 718.0], [507.0, 295.8], [504.0, 1445.0], [503.0, 1640.0], [496.0, 1639.0], [498.0, 1886.0], [497.0, 1422.0], [502.0, 2055.0], [501.0, 1421.0], [500.0, 1541.0], [536.0, 636.3333333333334], [542.0, 848.5], [530.0, 921.0], [528.0, 1834.0], [538.0, 863.0], [540.0, 1464.0], [534.0, 705.0], [532.0, 205.12500000000003], [522.0, 503.75], [520.0, 578.75], [524.0, 397.3333333333333], [526.0, 695.3333333333334], [514.0, 269.3333333333333], [512.0, 359.5], [516.0, 865.0], [518.0, 1962.0], [572.0, 77.0], [574.0, 507.0], [546.0, 848.0], [550.0, 1571.0], [548.0, 1429.0], [570.0, 1519.0], [568.0, 1517.0], [544.0, 670.0], [558.0, 180.0], [554.0, 690.3333333333334], [552.0, 1574.0], [556.0, 657.5], [566.0, 463.59999999999997], [564.0, 582.3333333333334], [560.0, 725.5], [562.0, 1415.0], [602.0, 248.66666666666669], [600.0, 330.66666666666663], [606.0, 572.75], [592.0, 540.6666666666666], [604.0, 792.3333333333334], [590.0, 451.75], [576.0, 1472.0], [578.0, 209.65217391304347], [580.0, 106.0], [582.0, 887.5], [588.0, 547.75], [586.0, 870.75], [584.0, 415.6666666666667], [598.0, 945.0], [596.0, 1447.0], [594.0, 754.0], [632.0, 863.6666666666666], [614.0, 469.49999999999994], [636.0, 690.0], [634.0, 1417.0], [638.0, 346.6666666666667], [626.0, 867.3333333333333], [630.0, 1079.0], [628.0, 1417.0], [620.0, 438.6666666666667], [618.0, 210.5], [616.0, 115.0], [612.0, 534.8], [610.0, 950.75], [608.0, 874.3333333333334], [622.0, 373.0], [668.0, 841.3333333333334], [664.0, 575.0], [670.0, 941.5], [666.0, 1744.0], [662.0, 1538.0], [658.0, 1495.0], [656.0, 1412.0], [654.0, 1417.0], [640.0, 1417.0], [646.0, 1413.0], [644.0, 1540.0], [652.0, 1586.0], [650.0, 1491.0], [648.0, 1485.5], [700.0, 1018.0], [678.0, 1100.6666666666667], [680.0, 813.5], [698.0, 1440.0], [696.0, 1461.0], [702.0, 1438.0], [682.0, 1058.5], [684.0, 1077.5], [672.0, 1462.0], [676.0, 1531.0], [674.0, 1552.0], [688.0, 1241.0], [690.0, 988.0], [692.0, 991.0], [694.0, 1023.0], [710.0, 573.3333333333334], [720.0, 995.0], [712.0, 593.8], [714.0, 1462.0], [716.0, 1063.5], [718.0, 1493.0], [704.0, 1518.0], [708.0, 1508.0], [706.0, 1466.0], [722.0, 825.0], [726.0, 842.75], [734.0, 1451.0], [728.0, 1812.0], [724.0, 1436.0], [764.0, 1594.0], [738.0, 1071.0], [736.0, 629.0], [750.0, 1490.0], [742.0, 1081.5], [740.0, 1542.5], [746.0, 707.2500000000001], [744.0, 1707.0], [748.0, 1059.0], [766.0, 1537.0], [754.0, 1431.0], [752.0, 1833.0], [762.0, 1531.0], [758.0, 1465.0], [756.0, 1485.0], [794.0, 740.7777777777778], [770.0, 935.6666666666666], [768.0, 1042.4], [782.0, 1502.0], [772.0, 1002.5], [778.0, 921.8], [776.0, 1455.0], [780.0, 785.4], [784.0, 1026.0], [798.0, 1496.0], [796.0, 1431.0], [792.0, 948.0], [774.0, 1535.0], [788.0, 1116.5], [786.0, 1454.0], [790.0, 1430.0], [826.0, 1049.0], [812.0, 900.5], [810.0, 994.6], [808.0, 1001.6], [818.0, 1118.0], [822.0, 1419.0], [820.0, 1422.0], [816.0, 941.0], [828.0, 988.6666666666667], [830.0, 1417.0], [824.0, 725.0], [806.0, 1526.0], [804.0, 1523.0], [802.0, 1552.0], [800.0, 1537.5], [814.0, 1424.0], [860.0, 756.0], [834.0, 686.1428571428571], [832.0, 1140.0], [846.0, 1513.0], [844.0, 1508.0], [842.0, 1412.0], [840.0, 1414.0], [836.0, 740.0], [838.0, 1459.0], [850.0, 529.6], [848.0, 1522.0], [858.0, 868.3333333333334], [856.0, 753.0], [854.0, 1089.0], [852.0, 1538.0], [890.0, 1237.0], [868.0, 943.6666666666667], [888.0, 1392.0], [870.0, 1397.0], [894.0, 1011.6666666666666], [892.0, 1632.0], [880.0, 1102.5], [884.0, 891.5], [886.0, 1394.0], [872.0, 1194.0], [876.0, 1141.0], [874.0, 1091.75], [878.0, 1183.0], [864.0, 1398.0], [924.0, 981.6666666666666], [898.0, 1109.0], [896.0, 873.0], [910.0, 1468.0], [908.0, 1445.0], [922.0, 1383.0], [920.0, 1544.0], [902.0, 1410.0], [900.0, 1389.0], [926.0, 1385.0], [904.0, 941.5], [906.0, 728.3333333333334], [912.0, 998.5], [918.0, 1129.0], [916.0, 1387.0], [914.0, 1575.0], [956.0, 1656.0], [934.0, 1238.5], [930.0, 1182.0], [928.0, 1466.0], [952.0, 1314.0], [942.0, 1009.5], [938.0, 1382.0], [936.0, 1384.0], [950.0, 887.25], [948.0, 971.4000000000001], [958.0, 1462.0], [944.0, 1435.0], [954.0, 1381.0], [988.0, 1601.0], [960.0, 638.4000000000001], [962.0, 950.5], [966.0, 1410.0], [964.0, 1467.5], [968.0, 1150.0], [972.0, 1742.0], [970.0, 1623.0], [990.0, 1383.0], [978.0, 1407.0], [976.0, 1648.0], [986.0, 1466.0], [984.0, 1482.0], [982.0, 1379.0], [980.0, 1381.0], [998.0, 719.1428571428573], [994.0, 820.3333333333333], [1016.0, 994.5], [1020.0, 1745.0], [1018.0, 1380.0], [1022.0, 576.25], [996.0, 785.1999999999999], [1004.0, 916.0], [992.0, 1384.0], [1002.0, 1404.0], [1000.0, 1405.0], [1010.0, 914.3333333333333], [1008.0, 1793.0], [1014.0, 1690.0], [1024.0, 912.75], [1028.0, 742.3333333333333], [1052.0, 587.0], [1048.0, 742.25], [1044.0, 896.25], [1032.0, 715.5], [1036.0, 860.2], [1084.0, 1377.0], [1060.0, 1643.0], [1056.0, 1518.0], [1080.0, 1537.0], [1064.0, 924.0], [1068.0, 1023.0], [1040.0, 708.25], [1144.0, 551.6], [1112.0, 1105.3333333333333], [1120.0, 944.8333333333334], [1148.0, 837.3333333333333], [1140.0, 997.5], [1100.0, 1673.0], [1096.0, 1571.0], [1092.0, 1455.0], [1088.0, 1479.5], [1116.0, 1203.0], [1132.0, 1370.0], [1128.0, 1373.0], [1108.0, 1475.5], [1104.0, 1656.0], [1200.0, 1128.5], [1180.0, 1101.3333333333333], [1152.0, 1480.0], [1176.0, 1367.0], [1172.0, 1368.0], [1168.0, 1503.0], [1160.0, 673.0000000000001], [1164.0, 1522.0], [1156.0, 791.75], [1192.0, 1080.8], [1196.0, 931.6666666666666], [1188.0, 1024.5], [1212.0, 853.6666666666666], [1208.0, 1492.0], [1204.0, 1494.0], [1276.0, 1434.0], [1244.0, 963.5], [1240.0, 1198.3333333333333], [1236.0, 1463.5], [1232.0, 1463.0], [1268.0, 1245.0], [1256.0, 727.0], [1272.0, 1494.0], [1264.0, 1463.0], [1228.0, 1477.5], [1224.0, 1386.0], [1220.0, 1387.0], [1216.0, 1407.0], [1260.0, 1613.0], [1252.0, 1547.0], [1248.0, 1386.0], [1336.0, 966.1250000000001], [1280.0, 926.75], [1284.0, 1451.0], [1288.0, 768.25], [1320.0, 784.75], [1316.0, 839.0], [1340.0, 783.8333333333333], [1312.0, 1434.0], [1332.0, 982.8000000000001], [1328.0, 1079.5], [1292.0, 1553.0], [1324.0, 725.5714285714286], [1296.0, 841.25], [1300.0, 1383.0], [1304.0, 1382.0], [1392.0, 1075.5], [1344.0, 898.3333333333333], [1348.0, 1021.5000000000001], [1368.0, 1069.5], [1372.0, 1047.5], [1360.0, 1011.0], [1400.0, 1365.5], [1396.0, 1425.6666666666667], [1404.0, 1496.0], [1380.0, 1378.0], [1376.0, 1427.0], [1356.0, 898.75], [1352.0, 1381.0], [1412.0, 1103.0], [1432.0, 1103.5], [1436.0, 1352.0], [1444.0, 1113.5], [1440.0, 1351.0], [1424.0, 938.75], [1428.0, 1447.0], [1468.0, 1404.0], [1464.0, 1568.0], [1460.0, 1469.0], [1456.0, 1425.0], [1420.0, 1521.75], [1416.0, 1420.5], [1452.0, 1371.0], [1528.0, 1385.0], [1476.0, 806.0], [1496.0, 1070.5], [1492.0, 1398.0], [1488.0, 1344.0], [1500.0, 1341.0], [1472.0, 1440.0], [1532.0, 1403.0], [1524.0, 1526.0], [1520.0, 1490.5], [1516.0, 1434.0], [1512.0, 1546.0], [1508.0, 965.0], [1540.0, 1549.0], [1544.0, 1231.5], [1536.0, 1038.3333333333335], [1556.0, 1095.5], [1560.0, 1530.0], [1564.0, 1360.0], [1576.0, 1455.0], [1572.0, 1379.0], [1568.0, 1433.0], [1580.0, 1452.0], [1592.0, 1377.0], [1584.0, 1493.0], [1548.0, 1574.0], [1660.0, 1636.0], [1648.0, 1041.5], [1612.0, 1450.0], [1608.0, 1349.0], [1604.0, 1561.0], [1600.0, 1426.0], [1636.0, 1045.6666666666667], [1640.0, 1198.0], [1644.0, 1342.0], [1632.0, 1034.7142857142858], [1656.0, 1369.0], [1624.0, 1182.3333333333333], [1620.0, 1465.0], [1616.0, 1425.0], [1628.0, 1054.0], [1672.0, 1339.0], [1676.0, 1440.0], [1664.0, 1124.3333333333335], [1692.0, 1074.0], [1668.0, 1339.0], [1696.0, 1226.5], [1720.0, 1202.0], [1724.0, 1093.5], [1716.0, 1339.0], [1712.0, 1117.0], [1700.0, 1133.0], [1704.0, 1084.7500000000002], [1708.0, 1504.0], [1680.0, 887.0], [1688.0, 1012.0], [1684.0, 1392.0], [1732.0, 1099.5], [1740.0, 1196.5], [1728.0, 1112.0], [1756.0, 1125.0], [1752.0, 1061.5], [1748.0, 1399.5], [1744.0, 1335.0], [1736.0, 1403.0], [1776.0, 1421.0], [1780.0, 1062.5], [1784.0, 1200.5], [1788.0, 1119.5], [1760.0, 1129.0], [1764.0, 1330.0], [1772.0, 1342.5], [1768.0, 1061.5], [1852.0, 1396.0], [1792.0, 859.6666666666666], [1804.0, 1409.0], [1800.0, 1392.0], [1796.0, 1322.0], [1820.0, 827.5], [1824.0, 1354.0], [1828.0, 1631.0], [1844.0, 903.5], [1832.0, 1135.0], [1836.0, 1262.5], [1812.0, 807.0], [1816.0, 1339.0], [1868.0, 1119.0], [1860.0, 926.5], [1880.0, 1110.5], [1856.0, 1351.0], [1884.0, 1481.0], [1864.0, 1323.0], [1888.0, 1299.0], [1892.0, 1371.0], [1916.0, 1293.0], [1912.0, 1362.0], [1908.0, 1139.0], [1904.0, 1007.5714285714286], [1896.0, 1297.0], [1900.0, 1341.0], [1872.0, 958.6666666666667], [1876.0, 1074.6666666666667], [1928.0, 1130.5], [1920.0, 1218.3333333333333], [1936.0, 1151.5], [1944.0, 1484.0], [1968.0, 1103.0], [1976.0, 1181.0], [1980.0, 1255.0], [1972.0, 1127.5], [1956.0, 1359.0], [1964.0, 1337.0], [1932.0, 1199.6666666666667], [1996.0, 1045.5], [1984.0, 875.0], [2012.0, 922.5], [2004.0, 1172.5], [2008.0, 1178.0], [1992.0, 906.0], [2036.0, 1429.0], [2040.0, 1328.5], [2016.0, 1234.0], [2044.0, 1041.6666666666667], [2024.0, 1027.5], [2020.0, 1323.0], [2028.0, 1383.5], [2000.0, 1281.3333333333333], [2048.0, 1097.0], [2072.0, 1125.2], [2104.0, 1109.5], [2088.0, 1286.0], [2080.0, 1462.0], [2096.0, 1323.0], [2056.0, 1352.0], [2064.0, 1001.75], [2144.0, 1345.0], [2112.0, 1288.0], [2168.0, 1243.0], [2160.0, 1293.0], [2152.0, 1283.0], [2120.0, 1261.5], [2136.0, 1041.3333333333333], [2200.0, 1644.0], [2176.0, 1140.5714285714284], [2184.0, 1241.0], [2192.0, 1405.0], [2272.0, 1206.75], [2296.0, 1222.0], [2240.0, 1276.0], [2288.0, 1281.0], [2280.0, 1329.3333333333333], [2208.0, 1308.0], [2224.0, 1173.0], [2232.0, 1090.5], [2248.0, 1333.0], [2264.0, 1566.0], [2256.0, 1337.0], [2312.0, 1279.0], [2304.0, 1088.1666666666667], [2328.0, 1095.0], [2320.0, 1305.0], [2400.0, 1137.0], [2408.0, 1150.75], [2424.0, 1256.5], [2336.0, 1175.0], [2344.0, 1217.5], [2352.0, 1351.0], [2360.0, 1139.6666666666665], [2368.0, 1216.5], [2376.0, 1354.6666666666667], [2384.0, 1137.0], [2392.0, 1231.5], [2440.0, 1224.3999999999999], [2480.0, 1286.2], [2448.0, 1313.6666666666665], [2456.0, 1214.0], [2432.0, 1259.5], [2488.0, 1244.0], [2472.0, 1392.2499999999998], [2504.0, 1264.25], [2528.0, 1278.0], [2496.0, 1260.5], [2544.0, 1236.0], [2512.0, 1218.0], [2520.0, 1353.0], [2464.0, 1182.0], [2576.0, 1460.0], [2584.0, 1153.0], [2568.0, 1255.3333333333333], [2560.0, 1367.0], [2656.0, 1202.0], [2664.0, 1270.4285714285713], [2680.0, 1518.0], [2592.0, 1250.0], [2600.0, 1189.0], [2608.0, 1252.5], [2616.0, 1200.3333333333335], [2624.0, 1369.3333333333335], [2640.0, 1332.0], [2632.0, 1488.0], [2648.0, 1211.0], [2696.0, 1284.6666666666667], [2688.0, 1352.0], [2145.0, 1282.0], [2065.0, 1179.5], [2057.0, 1273.0], [2049.0, 1135.3333333333335], [2113.0, 1267.0], [2121.0, 1725.0], [2129.0, 1347.3333333333335], [2169.0, 1276.0], [2161.0, 1248.0], [2153.0, 1255.0], [2137.0, 1319.0], [2081.0, 1141.3333333333333], [2089.0, 1289.0], [2201.0, 1234.0], [2177.0, 1170.6666666666665], [2185.0, 1295.0], [2193.0, 1200.5], [2273.0, 1207.5], [2289.0, 1269.0], [2297.0, 1099.6666666666667], [2241.0, 1135.0], [2249.0, 1118.0], [2257.0, 1313.0], [2265.0, 1292.0], [2209.0, 1272.5], [2233.0, 1146.4545454545453], [2225.0, 1234.0], [2217.0, 1371.0], [2329.0, 1107.4], [2401.0, 1186.0], [2361.0, 1131.6], [2305.0, 1169.0], [2321.0, 1303.0], [2409.0, 1174.0], [2417.0, 1252.3333333333333], [2425.0, 1120.0], [2345.0, 1172.5], [2337.0, 1251.0], [2353.0, 1251.0], [2369.0, 1144.6000000000001], [2377.0, 1221.0], [2385.0, 1227.6666666666665], [2393.0, 1383.0], [2441.0, 1214.0], [2481.0, 1259.3636363636365], [2449.0, 1251.75], [2489.0, 1275.0], [2473.0, 1318.6666666666667], [2465.0, 1296.4], [2505.0, 1190.6666666666667], [2529.0, 1208.3333333333333], [2537.0, 1154.0], [2545.0, 1436.0], [2497.0, 1205.0], [2553.0, 1247.5], [2521.0, 1237.0], [2657.0, 1173.0], [2561.0, 1283.5], [2585.0, 1268.4], [2577.0, 1193.0], [2569.0, 1289.0], [2665.0, 1293.0], [2673.0, 1280.0], [2681.0, 1391.0], [2625.0, 1340.0], [2633.0, 1498.0], [2641.0, 1255.0], [2593.0, 1237.0000000000002], [2601.0, 1288.0], [2609.0, 1251.3333333333333], [2617.0, 1261.0], [2689.0, 1306.0], [1033.0, 802.3333333333334], [1025.0, 624.0], [1029.0, 1488.0], [1053.0, 1523.0], [1049.0, 1183.0], [1045.0, 1107.0], [1037.0, 1184.0], [1073.0, 1415.5], [1077.0, 1168.888888888889], [1081.0, 1035.5], [1065.0, 1008.5], [1061.0, 1402.0], [1041.0, 629.1428571428572], [1145.0, 515.0], [1089.0, 1278.5], [1093.0, 1374.0], [1101.0, 1456.0], [1097.0, 1378.0], [1117.0, 1418.0], [1113.0, 1536.0], [1109.0, 1510.0], [1149.0, 969.0], [1141.0, 1020.0], [1137.0, 1548.5], [1121.0, 1202.5], [1125.0, 1205.0], [1129.0, 960.0], [1133.0, 1370.0], [1165.0, 1077.5], [1157.0, 795.3333333333334], [1161.0, 974.5], [1173.0, 981.6666666666667], [1169.0, 1416.0], [1181.0, 801.25], [1153.0, 1440.5], [1177.0, 1646.0], [1193.0, 985.5], [1197.0, 1017.5], [1189.0, 1062.3333333333333], [1185.0, 1432.5], [1213.0, 1472.0], [1209.0, 1409.0], [1205.0, 1388.0], [1269.0, 1059.3333333333333], [1245.0, 979.5], [1253.0, 760.1666666666667], [1273.0, 1043.5], [1277.0, 1447.0], [1265.0, 1381.0], [1225.0, 1384.0], [1217.0, 1389.0], [1257.0, 1410.3333333333333], [1249.0, 1464.0], [1241.0, 1385.0], [1237.0, 1464.0], [1233.0, 1406.0], [1293.0, 881.5], [1281.0, 1090.6666666666665], [1309.0, 1531.0], [1297.0, 1444.0], [1285.0, 1078.0], [1289.0, 1114.0], [1321.0, 750.0], [1317.0, 778.5714285714287], [1341.0, 798.25], [1313.0, 1454.0], [1337.0, 680.375], [1333.0, 1024.0], [1329.0, 1428.0], [1325.0, 1183.25], [1357.0, 956.0], [1349.0, 749.375], [1353.0, 791.2500000000001], [1361.0, 1049.5], [1369.0, 1378.0], [1365.0, 1381.0], [1401.0, 709.0], [1405.0, 1455.0], [1381.0, 1430.0], [1377.0, 1498.0], [1389.0, 1377.3333333333335], [1385.0, 1436.5], [1393.0, 1025.5], [1345.0, 1033.0], [1373.0, 1519.0], [1465.0, 1180.5], [1413.0, 711.0], [1409.0, 1137.3333333333335], [1429.0, 764.0], [1425.0, 1522.0], [1433.0, 1349.0], [1437.0, 1373.0], [1469.0, 1345.0], [1445.0, 1350.0], [1441.0, 1369.0], [1461.0, 1610.0], [1457.0, 1433.5], [1453.0, 1545.0], [1449.0, 1528.0], [1525.0, 1402.5], [1505.0, 1200.0], [1509.0, 1085.3333333333333], [1517.0, 1408.0], [1529.0, 1434.0], [1501.0, 1416.0], [1477.0, 1419.5], [1473.0, 1402.0], [1485.0, 1484.0], [1481.0, 1343.5], [1497.0, 1442.0], [1493.0, 1564.0], [1489.0, 1397.0], [1585.0, 1494.0], [1597.0, 1160.3333333333335], [1549.0, 1382.0], [1545.0, 1503.0], [1593.0, 1352.0], [1589.0, 1418.0], [1569.0, 1405.0], [1553.0, 1446.0], [1565.0, 1380.0], [1577.0, 973.25], [1581.0, 1477.0], [1573.0, 1379.0], [1653.0, 1202.0], [1613.0, 820.5], [1601.0, 1045.0], [1609.0, 1373.0], [1605.0, 1423.0], [1637.0, 1049.0], [1641.0, 1039.5], [1645.0, 1341.0], [1633.0, 813.0], [1649.0, 1342.0], [1657.0, 1421.0], [1661.0, 745.0], [1617.0, 1345.0], [1621.0, 1563.0], [1625.0, 1034.6666666666667], [1673.0, 1338.0], [1717.0, 777.0], [1665.0, 1172.0], [1669.0, 1397.0], [1725.0, 1161.0], [1697.0, 1337.0], [1705.0, 1390.0], [1701.0, 1340.0], [1721.0, 1341.0], [1713.0, 987.3333333333334], [1689.0, 850.0], [1685.0, 1507.0], [1681.0, 1482.0], [1729.0, 989.6666666666666], [1733.0, 1067.6666666666667], [1757.0, 821.0], [1753.0, 901.0], [1749.0, 847.0], [1745.0, 1404.0], [1741.0, 1025.0], [1737.0, 1385.0], [1777.0, 1357.0], [1785.0, 1108.1666666666667], [1789.0, 1133.0], [1761.0, 1332.0], [1765.0, 1421.0], [1769.0, 1032.6666666666665], [1773.0, 1400.0], [1805.0, 1461.0], [1797.0, 1142.0], [1793.0, 1325.0], [1801.0, 1362.0], [1821.0, 1472.0], [1817.0, 810.0], [1841.0, 1317.3333333333333], [1845.0, 1249.0], [1853.0, 1125.5], [1849.0, 1148.0], [1833.0, 965.0], [1825.0, 1332.0], [1829.0, 1571.0], [1837.0, 1095.0], [1813.0, 1066.8], [1809.0, 1319.0], [1869.0, 1140.0], [1861.0, 1019.6666666666666], [1857.0, 879.0], [1885.0, 1076.25], [1881.0, 1156.0], [1909.0, 1297.0], [1913.0, 1320.0], [1893.0, 1197.0], [1889.0, 1298.0], [1917.0, 1139.2499999999998], [1897.0, 849.3333333333334], [1873.0, 1080.5], [1877.0, 1304.0], [1925.0, 1366.5], [1929.0, 1214.0], [1949.0, 1208.6], [1945.0, 1466.0], [1941.0, 1312.5], [1937.0, 1313.0], [1921.0, 1064.0], [1933.0, 1080.5], [1981.0, 1137.0], [1973.0, 1146.3333333333335], [1969.0, 1334.0], [1977.0, 1627.0], [1953.0, 1179.6666666666667], [1957.0, 1029.0], [1961.0, 1290.5], [1965.0, 1360.0], [1993.0, 1205.0], [2013.0, 1153.0], [1985.0, 1345.0], [2009.0, 986.0], [2005.0, 1306.0], [1997.0, 990.2857142857143], [2033.0, 1291.0], [2037.0, 1275.0], [2045.0, 1299.0], [2021.0, 1277.0], [2025.0, 1089.0], [2029.0, 1188.0], [2017.0, 846.0], [2001.0, 1048.0], [2058.0, 1273.0], [2074.0, 1117.1999999999998], [2106.0, 1194.6666666666665], [2098.0, 1266.0], [2082.0, 1165.0], [2090.0, 1037.6666666666667], [2050.0, 961.0], [2066.0, 1328.0], [2162.0, 1251.0], [2170.0, 1244.0], [2122.0, 1355.0], [2114.0, 1417.0], [2138.0, 1231.0], [2130.0, 1162.0], [2186.0, 1236.0], [2178.0, 1239.0], [2194.0, 1303.0], [2202.0, 1310.0], [2274.0, 1250.0], [2210.0, 1233.0], [2218.0, 1320.5], [2234.0, 1144.4999999999998], [2226.0, 1228.0], [2242.0, 1029.0], [2250.0, 1255.0], [2258.0, 1314.0], [2266.0, 1254.0], [2298.0, 1171.0], [2282.0, 1416.0], [2290.0, 1489.0], [2314.0, 1425.3333333333333], [2330.0, 1127.2], [2306.0, 1322.0], [2338.0, 1236.0], [2346.0, 1124.5], [2362.0, 1225.0], [2354.0, 1245.0], [2370.0, 1128.25], [2394.0, 1337.0], [2386.0, 1446.0], [2378.0, 1220.0], [2402.0, 1140.5], [2410.0, 1213.0], [2418.0, 1210.0], [2426.0, 1271.0], [2442.0, 1273.0], [2482.0, 1287.6666666666667], [2450.0, 1073.5], [2458.0, 1475.0], [2434.0, 1271.0], [2474.0, 1218.0], [2466.0, 1122.0], [2506.0, 1229.3000000000004], [2514.0, 1221.0], [2522.0, 1212.0], [2498.0, 1208.0], [2554.0, 1434.0], [2538.0, 1337.6666666666665], [2546.0, 1246.0], [2570.0, 1229.0], [2658.0, 1296.0], [2562.0, 1255.75], [2586.0, 1274.0], [2578.0, 1343.0], [2602.0, 1252.0], [2594.0, 1359.0], [2610.0, 1196.2], [2666.0, 1268.4], [2674.0, 1196.0], [2682.0, 1369.5], [2626.0, 1185.0], [2634.0, 1270.0], [2650.0, 1248.0], [2690.0, 1329.0], [2155.0, 1319.0], [2107.0, 1162.5], [2075.0, 1574.0], [2099.0, 1318.5], [2163.0, 1280.0], [2147.0, 1318.5], [2171.0, 1322.0], [2131.0, 1183.5], [2123.0, 1402.0], [2139.0, 1147.0], [2083.0, 1267.5], [2091.0, 1153.0], [2195.0, 1056.3333333333333], [2203.0, 1251.0], [2179.0, 1238.0], [2187.0, 1310.0], [2275.0, 1266.0], [2283.0, 1157.0], [2291.0, 1285.0], [2299.0, 1263.0], [2211.0, 1138.0], [2219.0, 1317.0], [2235.0, 987.0], [2243.0, 1198.6666666666667], [2251.0, 1198.3333333333335], [2259.0, 1184.5], [2267.0, 1514.0], [2323.0, 1244.25], [2307.0, 1286.0], [2331.0, 1085.0], [2339.0, 1234.0], [2347.0, 1258.0], [2355.0, 1246.0], [2363.0, 1166.5], [2379.0, 1267.0], [2427.0, 1118.8], [2411.0, 1135.5], [2419.0, 1125.6666666666665], [2403.0, 1161.0], [2387.0, 1080.5], [2451.0, 1214.25], [2531.0, 1152.0], [2483.0, 1335.3333333333335], [2435.0, 1367.0], [2443.0, 1489.0], [2475.0, 1202.5], [2459.0, 1242.0], [2539.0, 1232.125], [2547.0, 1247.0], [2555.0, 1295.8], [2499.0, 1241.0], [2467.0, 1188.0], [2507.0, 1256.0], [2523.0, 1202.0], [2515.0, 1359.0], [2579.0, 1226.0], [2587.0, 1183.5], [2563.0, 1356.3333333333335], [2619.0, 1171.3333333333335], [2611.0, 1217.0], [2571.0, 1173.0], [2659.0, 1432.0], [2667.0, 1322.25], [2675.0, 1308.5], [2683.0, 1258.0], [2627.0, 1377.0], [2635.0, 1378.0], [2643.0, 1173.3333333333333], [2651.0, 1399.0], [2595.0, 1382.0], [2603.0, 1167.0], [513.0, 370.5], [541.0, 848.5], [537.0, 1542.0], [543.0, 1445.0], [531.0, 1565.0], [529.0, 1539.0], [535.0, 979.5], [533.0, 782.6], [525.0, 428.4], [523.0, 606.5], [521.0, 1475.0], [527.0, 592.0], [519.0, 411.44444444444446], [515.0, 824.0], [517.0, 1547.0], [551.0, 813.5], [563.0, 645.6666666666666], [573.0, 704.8571428571428], [571.0, 556.25], [549.0, 675.6666666666666], [547.0, 992.5], [559.0, 303.83333333333337], [557.0, 795.6666666666667], [555.0, 635.0], [553.0, 1418.0], [567.0, 680.3333333333334], [565.0, 1417.0], [561.0, 608.0], [601.0, 698.3333333333334], [605.0, 517.0], [607.0, 635.5], [603.0, 626.5], [591.0, 706.5999999999999], [577.0, 924.5], [581.0, 416.88888888888886], [579.0, 453.6], [583.0, 452.6666666666667], [585.0, 218.10000000000002], [587.0, 1421.0], [589.0, 1442.0], [599.0, 574.3333333333334], [597.0, 497.0], [595.0, 789.5], [593.0, 553.8000000000001], [639.0, 194.46153846153845], [637.0, 375.8], [635.0, 1516.0], [633.0, 1419.0], [615.0, 1614.0], [625.0, 838.7142857142857], [627.0, 1053.0], [629.0, 1026.5], [631.0, 832.0], [621.0, 548.75], [619.0, 1008.25], [617.0, 1163.3333333333333], [613.0, 534.5], [611.0, 524.0], [609.0, 334.0], [623.0, 1663.5], [667.0, 1052.5], [641.0, 1111.5], [643.0, 1530.0], [651.0, 788.75], [649.0, 1568.0], [653.0, 1412.0], [655.0, 960.0], [669.0, 729.2499999999999], [671.0, 968.0], [665.0, 1494.0], [645.0, 1491.0], [663.0, 1504.0], [661.0, 1509.0], [659.0, 1506.0], [701.0, 1459.0], [679.0, 723.8000000000001], [699.0, 734.6666666666667], [685.0, 910.6666666666666], [683.0, 1640.0], [681.0, 1512.0], [687.0, 1489.0], [675.0, 1879.0], [673.0, 1456.0], [703.0, 1437.0], [697.0, 1432.0], [695.0, 1521.0], [693.0, 1442.0], [689.0, 1449.0], [733.0, 1434.0], [729.0, 988.0], [707.0, 604.0], [705.0, 1518.0], [711.0, 1517.0], [709.0, 1463.0], [731.0, 1138.3333333333333], [735.0, 1471.0], [721.0, 1436.0], [717.0, 1025.5], [715.0, 1439.0], [713.0, 1555.5], [719.0, 1435.0], [723.0, 887.0], [727.0, 1068.5], [725.0, 1074.5], [765.0, 1531.0], [743.0, 1162.0], [741.0, 856.9999999999999], [751.0, 1471.0], [737.0, 1433.5], [759.0, 1106.0], [761.0, 1150.3333333333333], [747.0, 789.5], [745.0, 898.0], [763.0, 1596.0], [757.0, 1509.0], [755.0, 1486.0], [753.0, 1487.0], [793.0, 1001.0], [779.0, 698.0], [769.0, 1092.5], [773.0, 1428.0], [771.0, 1431.0], [783.0, 1530.0], [781.0, 1561.0], [777.0, 583.0], [795.0, 914.0], [797.0, 1473.0], [787.0, 1642.0], [785.0, 1744.0], [789.0, 934.3333333333334], [791.0, 1035.0], [829.0, 729.5], [811.0, 955.3333333333334], [807.0, 703.0], [805.0, 1433.0], [803.0, 1431.0], [801.0, 1688.0], [815.0, 1424.0], [813.0, 1790.0], [809.0, 665.5714285714286], [817.0, 873.6666666666666], [825.0, 1019.5], [831.0, 1463.0], [827.0, 1490.0], [823.0, 1423.0], [821.0, 1418.0], [861.0, 1086.0], [835.0, 785.8], [833.0, 714.375], [839.0, 1022.0], [837.0, 1464.0], [841.0, 947.5], [843.0, 1410.0], [845.0, 981.6666666666666], [849.0, 623.3333333333334], [863.0, 1597.5], [859.0, 808.0], [857.0, 1179.25], [851.0, 1295.0], [853.0, 909.6666666666666], [855.0, 758.0], [893.0, 977.0], [867.0, 1046.8333333333333], [879.0, 984.6666666666666], [871.0, 918.0], [869.0, 1472.0], [895.0, 776.0000000000001], [883.0, 1406.0], [881.0, 1418.0], [875.0, 903.0], [877.0, 1395.0], [891.0, 1391.0], [889.0, 1446.0], [887.0, 1637.0], [885.0, 1392.0], [923.0, 803.0], [899.0, 949.5], [925.0, 893.5], [907.0, 1099.0], [905.0, 1409.0], [911.0, 1603.0], [897.0, 1413.0], [909.0, 1462.0], [913.0, 866.3333333333333], [917.0, 890.5], [927.0, 1436.0], [921.0, 1385.0], [903.0, 1391.0], [901.0, 1411.0], [915.0, 1387.0], [953.0, 952.5], [935.0, 1147.5], [955.0, 1142.5], [959.0, 694.5], [939.0, 1121.5], [937.0, 1383.0], [941.0, 1102.6666666666665], [943.0, 1107.5], [929.0, 1384.0], [933.0, 1455.6666666666667], [945.0, 946.0], [951.0, 1122.0], [949.0, 1079.0], [947.0, 776.0], [987.0, 1467.0], [961.0, 695.5], [975.0, 1577.5], [969.0, 990.0], [971.0, 1519.0], [973.0, 799.3333333333334], [977.0, 1167.0], [979.0, 1381.0], [991.0, 1408.0], [989.0, 1520.0], [985.0, 1600.0], [967.0, 1519.0], [965.0, 1644.0], [983.0, 1521.0], [981.0, 1380.0], [1021.0, 1149.5], [997.0, 956.4], [993.0, 906.0], [1017.0, 680.5], [999.0, 1381.0], [1019.0, 1661.5], [1023.0, 1100.0], [995.0, 1002.75], [1007.0, 1091.6666666666667], [1005.0, 1409.0], [1003.0, 1381.0], [1001.0, 1406.0], [1009.0, 1010.0], [1013.0, 1209.6666666666667], [1011.0, 1596.0], [1015.0, 1436.0], [1030.0, 829.8], [1050.0, 921.6666666666667], [1054.0, 1069.0], [1046.0, 1211.0], [1042.0, 688.8], [1026.0, 1069.5], [1034.0, 985.5], [1038.0, 812.3333333333333], [1074.0, 582.5], [1078.0, 947.5], [1082.0, 1237.5], [1070.0, 916.6666666666666], [1066.0, 1454.0], [1058.0, 1516.5], [1086.0, 1484.5], [1142.0, 907.3333333333333], [1090.0, 1028.3333333333335], [1098.0, 946.0], [1094.0, 1403.0], [1118.0, 1040.0], [1126.0, 592.0], [1122.0, 1452.0], [1134.0, 1428.0], [1130.0, 1422.0], [1110.0, 1076.0], [1106.0, 1376.5], [1150.0, 1476.0], [1146.0, 1443.0], [1138.0, 1426.0], [1102.0, 1776.0], [1182.0, 981.0], [1158.0, 938.25], [1170.0, 508.0], [1174.0, 910.75], [1178.0, 963.0], [1162.0, 663.0], [1166.0, 1092.0], [1190.0, 719.0], [1194.0, 787.5], [1198.0, 1384.0], [1206.0, 524.5], [1214.0, 1407.0], [1186.0, 1449.0], [1210.0, 1516.0], [1274.0, 858.0], [1246.0, 749.6], [1222.0, 1492.0], [1218.0, 1465.0], [1230.0, 1463.0], [1226.0, 1488.0], [1242.0, 1382.0], [1238.0, 1414.0], [1234.0, 1461.0], [1254.0, 711.7777777777778], [1278.0, 1009.0], [1270.0, 788.75], [1258.0, 1011.0], [1266.0, 1480.0], [1262.0, 1520.0], [1250.0, 1484.0], [1338.0, 987.4], [1294.0, 940.75], [1286.0, 760.3333333333333], [1306.0, 1398.0], [1282.0, 1488.0], [1302.0, 1423.0], [1298.0, 1412.0], [1318.0, 785.2857142857143], [1314.0, 997.5], [1342.0, 720.1428571428571], [1330.0, 826.6666666666667], [1334.0, 606.6666666666667], [1326.0, 827.7499999999999], [1322.0, 1507.5], [1290.0, 1018.75], [1394.0, 801.0], [1350.0, 852.4], [1346.0, 989.6666666666667], [1374.0, 1424.0], [1370.0, 1378.0], [1366.0, 1437.0], [1362.0, 1380.0], [1354.0, 752.2857142857143], [1358.0, 1523.0], [1390.0, 892.3333333333333], [1406.0, 1430.0], [1402.0, 1440.5], [1398.0, 1472.5], [1386.0, 1474.0], [1458.0, 1018.5], [1410.0, 711.0], [1430.0, 1194.3333333333333], [1426.0, 1427.0], [1438.0, 1371.0], [1434.0, 1367.0], [1422.0, 803.0], [1454.0, 864.4], [1470.0, 1517.0], [1462.0, 1423.0], [1450.0, 1349.0], [1446.0, 1424.0], [1442.0, 1446.0], [1530.0, 1386.0], [1494.0, 954.0], [1490.0, 1439.0], [1498.0, 1397.0], [1502.0, 1020.0], [1506.0, 1092.5], [1522.0, 1480.0], [1482.0, 1422.0], [1478.0, 1402.0], [1474.0, 1439.0], [1510.0, 1069.0], [1518.0, 1133.5], [1514.0, 1408.0], [1598.0, 1559.0], [1546.0, 1170.5], [1542.0, 1331.0], [1554.0, 1399.0], [1558.0, 1408.5], [1562.0, 1515.5], [1578.0, 1132.5], [1574.0, 1455.0], [1570.0, 1359.0], [1582.0, 1357.0], [1594.0, 1354.0], [1590.0, 1453.0], [1586.0, 1374.0], [1550.0, 1431.0], [1614.0, 1057.5], [1634.0, 1006.1666666666666], [1602.0, 1056.0], [1606.0, 1368.0], [1630.0, 1357.5], [1610.0, 1094.0], [1638.0, 1083.0], [1642.0, 786.0], [1646.0, 1343.0], [1662.0, 847.2857142857143], [1658.0, 1372.0], [1654.0, 1342.0], [1650.0, 1342.0], [1622.0, 1344.0], [1618.0, 1394.0], [1718.0, 1098.0], [1674.0, 758.0], [1678.0, 1427.5], [1694.0, 1378.5], [1670.0, 1109.0], [1666.0, 1340.0], [1722.0, 1705.0], [1714.0, 1454.0], [1698.0, 1009.3333333333334], [1702.0, 1099.5], [1706.0, 808.0], [1710.0, 1198.0], [1682.0, 1228.3333333333333], [1690.0, 1167.0], [1734.0, 1150.5], [1742.0, 1055.3333333333335], [1758.0, 1377.0], [1750.0, 1403.5], [1746.0, 1360.0], [1754.0, 1465.0], [1730.0, 1133.0], [1738.0, 1218.5], [1778.0, 1210.5], [1782.0, 1350.5], [1786.0, 1088.3333333333333], [1790.0, 1014.6666666666666], [1762.0, 1330.0], [1766.0, 1677.0], [1770.0, 1106.5], [1774.0, 1377.0], [1846.0, 1371.0], [1806.0, 1046.25], [1794.0, 1395.5], [1822.0, 1550.0], [1818.0, 1235.3333333333333], [1830.0, 898.0], [1850.0, 1027.5], [1842.0, 1208.5], [1834.0, 1345.3333333333335], [1838.0, 1511.0], [1810.0, 985.6666666666666], [1814.0, 1074.0], [1862.0, 1357.5], [1882.0, 1001.75], [1886.0, 1342.0], [1858.0, 1338.5], [1866.0, 1217.3333333333333], [1918.0, 1061.0], [1890.0, 1319.0], [1914.0, 1292.0], [1910.0, 1047.75], [1870.0, 1368.0], [1906.0, 1355.6666666666665], [1894.0, 1007.0], [1898.0, 974.0], [1902.0, 1449.0], [1874.0, 876.5], [1930.0, 1015.8000000000001], [1934.0, 1064.0], [1942.0, 1339.0], [1938.0, 1290.0], [1950.0, 1394.0], [1926.0, 1564.0], [1922.0, 1533.0], [1974.0, 1135.0], [1982.0, 1102.0], [1970.0, 1306.0], [1958.0, 992.25], [1954.0, 1313.0], [1962.0, 1292.0], [1966.0, 1334.0], [1994.0, 1127.5], [1986.0, 1084.0], [1990.0, 1331.6666666666667], [2014.0, 1028.3846153846155], [2010.0, 1276.0], [2006.0, 1280.0], [1998.0, 1026.5714285714284], [2034.0, 1355.0], [2038.0, 1300.0], [2046.0, 1054.5], [2042.0, 1107.5], [2018.0, 1129.0], [2022.0, 1277.0], [2026.0, 1083.6666666666667], [2030.0, 1218.5], [2002.0, 1308.0], [2060.0, 1359.6666666666665], [2052.0, 1236.75], [2108.0, 1195.0], [2092.0, 889.0], [2084.0, 1294.0], [2100.0, 1500.0], [2068.0, 1145.0], [2076.0, 1100.5], [2172.0, 1272.0], [2164.0, 1328.0], [2156.0, 1396.0], [2148.0, 1169.5], [2116.0, 1238.3333333333333], [2124.0, 1143.5], [2132.0, 1150.25], [2140.0, 1306.5], [2196.0, 1088.857142857143], [2188.0, 1326.0], [2204.0, 1147.8], [2244.0, 1276.0], [2292.0, 1310.0], [2284.0, 1282.0], [2276.0, 1568.0], [2212.0, 1236.0], [2220.0, 1346.0], [2236.0, 1145.3999999999999], [2268.0, 995.0], [2260.0, 1253.0], [2324.0, 1471.0], [2316.0, 1083.0], [2308.0, 1243.0], [2364.0, 1483.0], [2332.0, 1247.5], [2404.0, 1160.8], [2420.0, 1246.0], [2412.0, 1270.0], [2428.0, 1227.6666666666665], [2340.0, 1455.0], [2348.0, 1282.3333333333333], [2356.0, 1233.0], [2372.0, 1262.5], [2396.0, 1252.5], [2388.0, 1218.5], [2444.0, 1249.0], [2460.0, 1134.0], [2484.0, 1220.5], [2492.0, 1250.6666666666665], [2436.0, 1219.0], [2468.0, 1234.1666666666667], [2532.0, 1204.8333333333333], [2556.0, 1266.0], [2500.0, 1578.0], [2548.0, 1411.0], [2540.0, 1394.0], [2508.0, 1225.6], [2516.0, 1201.0], [2524.0, 1248.0], [2476.0, 1243.3333333333333], [2588.0, 1152.0], [2580.0, 1342.0], [2572.0, 1201.0], [2620.0, 1307.5], [2564.0, 1494.0], [2660.0, 1202.0], [2668.0, 1348.3333333333333], [2676.0, 1230.0], [2684.0, 1183.0], [2596.0, 1255.2500000000002], [2604.0, 1249.2], [2612.0, 1248.0], [2644.0, 1292.5], [2636.0, 1333.0], [2628.0, 1380.0], [2652.0, 1182.0], [2692.0, 1225.3333333333333], [2069.0, 1175.0], [2061.0, 1138.5], [2053.0, 1302.0], [2093.0, 1167.3333333333333], [2101.0, 1132.5], [2149.0, 934.0], [2133.0, 1192.0], [2173.0, 1337.0], [2117.0, 1445.0], [2125.0, 1664.0], [2165.0, 1327.0], [2157.0, 1278.0], [2141.0, 1426.0], [2085.0, 1379.0], [2205.0, 1089.8000000000002], [2189.0, 1153.0], [2181.0, 1305.0], [2197.0, 1082.166666666667], [2277.0, 1113.2], [2285.0, 1200.75], [2245.0, 1373.0], [2253.0, 1164.2], [2261.0, 1139.5], [2269.0, 1185.3333333333335], [2213.0, 1129.5], [2229.0, 1375.0], [2221.0, 1229.0], [2237.0, 1263.0], [2333.0, 1162.0], [2325.0, 1239.0], [2317.0, 1275.3333333333333], [2309.0, 1302.0], [2405.0, 1170.3333333333333], [2421.0, 1139.0], [2413.0, 1211.0], [2429.0, 1187.0], [2341.0, 1296.0], [2349.0, 1069.0], [2357.0, 1200.0], [2365.0, 1261.0], [2381.0, 1268.0], [2373.0, 2136.0], [2389.0, 1159.5], [2397.0, 1261.0], [2445.0, 1214.0], [2533.0, 1239.3333333333333], [2437.0, 1237.0], [2453.0, 1250.0], [2493.0, 1206.0], [2485.0, 1242.0], [2469.0, 1289.5], [2461.0, 1277.6666666666665], [2477.0, 1270.75], [2549.0, 1229.5], [2557.0, 1373.0], [2501.0, 1204.0], [2509.0, 1205.2], [2517.0, 1393.0], [2525.0, 1247.0], [2661.0, 1268.0], [2565.0, 1285.0], [2581.0, 1191.0], [2589.0, 1326.5], [2669.0, 1178.0], [2629.0, 1460.0], [2637.0, 1378.0], [2677.0, 1294.0], [2605.0, 1189.0], [2613.0, 1340.0], [2621.0, 1195.25], [2645.0, 1197.6666666666665], [2653.0, 1188.5], [2693.0, 1271.0], [1031.0, 820.3333333333334], [1055.0, 968.5], [1027.0, 1380.0], [1051.0, 922.5], [1043.0, 934.0], [1047.0, 1376.0], [1035.0, 1004.6666666666666], [1039.0, 997.0], [1083.0, 1039.0], [1079.0, 2053.0], [1063.0, 993.25], [1071.0, 713.6000000000001], [1067.0, 1406.0], [1099.0, 588.0], [1147.0, 1214.5], [1127.0, 1424.5], [1123.0, 1371.0], [1119.0, 990.0], [1091.0, 1636.0], [1107.0, 583.0], [1111.0, 1180.0], [1115.0, 1025.0], [1143.0, 1448.0], [1139.0, 1425.0], [1103.0, 1633.0], [1135.0, 1375.0], [1131.0, 1680.0], [1211.0, 878.3333333333334], [1175.0, 836.3333333333333], [1171.0, 1457.0], [1179.0, 821.6666666666666], [1163.0, 1152.6666666666667], [1167.0, 1366.0], [1183.0, 1384.0], [1159.0, 1373.0], [1155.0, 1438.0], [1199.0, 1007.0], [1195.0, 1467.0], [1191.0, 771.5], [1215.0, 1412.0], [1187.0, 1382.0], [1207.0, 1395.0], [1203.0, 1428.6666666666665], [1279.0, 991.0], [1235.0, 535.0], [1243.0, 1385.0], [1247.0, 635.0], [1271.0, 1138.0], [1231.0, 1754.0], [1223.0, 1490.0], [1219.0, 1481.0], [1255.0, 645.0], [1259.0, 801.75], [1275.0, 1676.0], [1263.0, 1383.0], [1251.0, 1412.0], [1339.0, 943.1666666666667], [1319.0, 881.25], [1323.0, 906.1999999999999], [1343.0, 1011.6], [1315.0, 1451.0], [1335.0, 708.4444444444446], [1331.0, 619.0], [1327.0, 1093.5], [1291.0, 820.7499999999999], [1287.0, 1379.0], [1295.0, 1588.0], [1311.0, 1483.0], [1307.0, 1387.0], [1303.0, 1381.0], [1299.0, 1385.0], [1355.0, 1001.2], [1351.0, 794.8571428571429], [1347.0, 684.0], [1375.0, 1062.5], [1371.0, 1378.0], [1367.0, 1379.0], [1363.0, 1378.0], [1399.0, 1113.0], [1359.0, 1379.0], [1391.0, 1061.5], [1407.0, 1380.0], [1403.0, 1458.0], [1383.0, 1404.0], [1379.0, 1430.0], [1467.0, 1532.5], [1411.0, 1275.6666666666667], [1439.0, 1370.0], [1435.0, 1637.0], [1431.0, 1634.0], [1427.0, 1634.0], [1419.0, 995.0], [1459.0, 1176.5], [1423.0, 1454.6666666666665], [1471.0, 1525.0], [1463.0, 1543.0], [1451.0, 1473.0], [1447.0, 1369.0], [1443.0, 1349.0], [1531.0, 1434.0], [1475.0, 903.0], [1503.0, 1341.0], [1499.0, 1344.0], [1495.0, 1584.0], [1491.0, 1473.0], [1507.0, 1088.5], [1511.0, 1190.0], [1515.0, 1496.5], [1535.0, 1389.3333333333333], [1527.0, 1467.5], [1487.0, 1470.0], [1483.0, 1521.0], [1479.0, 1499.0], [1587.0, 770.6666666666667], [1543.0, 1055.6666666666667], [1551.0, 1382.0], [1547.0, 1363.0], [1595.0, 1088.0], [1591.0, 1376.5], [1599.0, 1198.5], [1571.0, 1358.0], [1563.0, 1056.3333333333333], [1555.0, 1360.0], [1567.0, 1428.0], [1539.0, 1383.3333333333335], [1579.0, 994.0], [1583.0, 1521.0], [1575.0, 1250.0], [1611.0, 1680.0], [1631.0, 1020.3750000000001], [1607.0, 1348.0], [1603.0, 1494.0], [1635.0, 908.5], [1639.0, 1066.5], [1643.0, 1207.0], [1647.0, 1444.0], [1651.0, 1984.0], [1615.0, 1396.5], [1655.0, 1099.5], [1659.0, 1042.0], [1663.0, 1160.7142857142858], [1619.0, 1072.0], [1627.0, 1113.4], [1679.0, 1337.0], [1675.0, 756.0], [1695.0, 1142.0], [1671.0, 1439.0], [1667.0, 1339.0], [1727.0, 1046.5], [1711.0, 1390.0], [1707.0, 1379.0], [1723.0, 839.0], [1719.0, 1590.0], [1715.0, 1481.0], [1687.0, 1370.5], [1683.0, 1370.0], [1691.0, 1649.0], [1739.0, 1335.0], [1783.0, 1099.0], [1731.0, 1387.0], [1759.0, 1377.0], [1755.0, 1207.5], [1751.0, 1472.0], [1735.0, 1386.0], [1743.0, 977.7500000000001], [1779.0, 974.25], [1787.0, 1230.5], [1791.0, 992.8333333333334], [1763.0, 1074.0], [1767.0, 1151.0], [1771.0, 909.0], [1775.0, 1210.0], [1799.0, 1389.0], [1807.0, 1134.5], [1795.0, 1391.0], [1803.0, 1367.0], [1823.0, 1356.0], [1819.0, 1338.0], [1815.0, 1079.0], [1843.0, 1146.0], [1847.0, 1310.0], [1851.0, 1399.0], [1855.0, 1316.0], [1827.0, 1355.5], [1831.0, 1480.5], [1835.0, 1068.0], [1811.0, 1342.0], [1863.0, 1424.0], [1859.0, 1396.0], [1887.0, 1058.5], [1883.0, 1100.0], [1867.0, 1012.0], [1871.0, 1198.0], [1907.0, 1388.0], [1911.0, 1296.0], [1891.0, 1496.0], [1895.0, 1477.0], [1919.0, 914.3333333333333], [1915.0, 1320.0], [1903.0, 1531.0], [1899.0, 1524.3333333333335], [1875.0, 1312.0], [1879.0, 1349.5], [1951.0, 1310.0], [1947.0, 1419.5], [1943.0, 1313.0], [1939.0, 1543.0], [1923.0, 996.0], [1927.0, 1291.0], [1935.0, 1085.0], [1983.0, 1135.5], [1971.0, 1387.0], [1979.0, 1403.5], [1967.0, 1101.5], [1955.0, 1370.0], [1959.0, 1291.0], [1963.0, 1290.0], [1931.0, 1192.3333333333333], [1995.0, 1368.0], [1991.0, 1026.2], [2015.0, 1121.6], [1987.0, 1337.0], [2011.0, 994.4], [2007.0, 1039.0], [1999.0, 992.0], [2035.0, 1275.0], [2043.0, 1357.0], [2047.0, 1122.2], [2019.0, 1030.3333333333333], [2023.0, 1412.0], [2031.0, 1307.0], [2003.0, 1221.5], [2062.0, 1086.0], [2110.0, 1117.3999999999999], [2054.0, 1194.0], [2102.0, 1352.5], [2094.0, 1143.5], [2086.0, 1298.0], [2070.0, 1483.0], [2078.0, 1319.0], [2150.0, 1318.0], [2158.0, 1254.0], [2166.0, 923.0], [2126.0, 1082.5], [2134.0, 1081.0], [2142.0, 1205.0], [2190.0, 1121.5], [2182.0, 1116.0], [2198.0, 1450.0], [2206.0, 1324.0], [2214.0, 1028.0], [2230.0, 1279.0], [2222.0, 1317.0], [2254.0, 1313.0], [2270.0, 1250.0], [2302.0, 1287.25], [2278.0, 1223.5], [2286.0, 1297.5], [2294.0, 1234.5], [2318.0, 1250.5], [2310.0, 1398.0], [2326.0, 1301.0], [2334.0, 1145.6666666666667], [2342.0, 1206.3333333333333], [2366.0, 1257.6666666666665], [2358.0, 1448.0], [2350.0, 1240.0], [2398.0, 1147.5], [2390.0, 1374.0], [2382.0, 1266.0], [2406.0, 1214.0], [2414.0, 1827.0], [2430.0, 1271.0], [2446.0, 1217.0], [2462.0, 1221.6000000000004], [2438.0, 1205.5], [2454.0, 1212.0], [2486.0, 1219.25], [2494.0, 1206.0], [2470.0, 1200.6666666666665], [2510.0, 1203.7500000000002], [2518.0, 1201.0], [2502.0, 1315.6666666666665], [2558.0, 1318.5], [2534.0, 1287.0], [2550.0, 1170.0], [2478.0, 1204.0], [2582.0, 1191.0], [2566.0, 1199.3333333333333], [2622.0, 1185.5], [2574.0, 1276.0], [2606.0, 1428.5], [2598.0, 1426.5], [2662.0, 1288.0], [2670.0, 1174.0], [2678.0, 1283.0], [2686.0, 1361.0], [2630.0, 1459.0], [2646.0, 1190.0], [2638.0, 1182.0], [2654.0, 1395.0], [2694.0, 1245.3333333333335], [2159.0, 1276.0], [2079.0, 1227.5], [2111.0, 1119.5], [2063.0, 1441.0], [2103.0, 1121.0], [2095.0, 1268.0], [2167.0, 1098.4], [2151.0, 1341.0], [2175.0, 1153.2000000000003], [2119.0, 1385.0], [2143.0, 1344.0], [2135.0, 1143.0], [2087.0, 1296.0], [2199.0, 1307.0], [2279.0, 1554.0], [2239.0, 1268.0], [2183.0, 1295.0], [2191.0, 1236.0], [2207.0, 1173.0], [2287.0, 1237.0], [2295.0, 1217.0], [2303.0, 1223.3333333333333], [2215.0, 1342.0], [2231.0, 1297.0], [2223.0, 1283.0], [2247.0, 1230.3333333333335], [2255.0, 1373.0], [2263.0, 1536.0], [2311.0, 1018.0], [2319.0, 1241.0], [2367.0, 1244.0], [2327.0, 1238.0], [2335.0, 1213.6666666666667], [2343.0, 1109.3333333333335], [2351.0, 1318.0], [2359.0, 1286.0], [2383.0, 1205.5], [2375.0, 1334.0], [2423.0, 1534.0], [2407.0, 1055.0], [2399.0, 1196.3333333333335], [2463.0, 1306.5], [2455.0, 1213.0], [2487.0, 1276.0], [2439.0, 1249.0], [2479.0, 1247.5000000000002], [2471.0, 1118.0], [2535.0, 1198.0], [2543.0, 1211.0], [2551.0, 1169.0], [2559.0, 1345.5], [2503.0, 1324.25], [2511.0, 1218.6999999999998], [2519.0, 1457.0], [2527.0, 1291.0], [2575.0, 1211.142857142857], [2567.0, 1239.2], [2623.0, 1458.0], [2615.0, 1283.6666666666667], [2607.0, 1241.5], [2583.0, 1189.0], [2591.0, 1264.6666666666665], [2663.0, 1211.0], [2671.0, 1175.0], [2679.0, 1260.0], [2687.0, 1296.0], [2639.0, 1334.0], [2655.0, 1298.0], [2647.0, 1248.0], [2599.0, 1636.0], [2695.0, 1178.5], [1.0, 1650.0]], "isOverall": false, "label": "singleRequest", "isController": false}, {"data": [[1408.2803999999933, 1127.8258000000033]], "isOverall": false, "label": "singleRequest-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2696.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 84148.33333333333, "minX": 1.72054146E12, "maxY": 219833.33333333334, "series": [{"data": [[1.72054146E12, 84148.33333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72054146E12, 219833.33333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72054146E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1127.8258000000033, "minX": 1.72054146E12, "maxY": 1127.8258000000033, "series": [{"data": [[1.72054146E12, 1127.8258000000033]], "isOverall": false, "label": "singleRequest", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72054146E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1127.568800000004, "minX": 1.72054146E12, "maxY": 1127.568800000004, "series": [{"data": [[1.72054146E12, 1127.568800000004]], "isOverall": false, "label": "singleRequest", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72054146E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 20.64159999999995, "minX": 1.72054146E12, "maxY": 20.64159999999995, "series": [{"data": [[1.72054146E12, 20.64159999999995]], "isOverall": false, "label": "singleRequest", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72054146E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 33.0, "minX": 1.72054146E12, "maxY": 2610.0, "series": [{"data": [[1.72054146E12, 2610.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72054146E12, 33.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72054146E12, 1561.8999999999996]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72054146E12, 1792.9799999999996]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72054146E12, 1276.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.72054146E12, 1642.949999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72054146E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 461.5, "minX": 168.0, "maxY": 1614.0, "series": [{"data": [[2806.0, 1285.0], [168.0, 1614.0], [3286.0, 1459.0], [1772.0, 461.5], [1968.0, 848.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3286.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 461.5, "minX": 168.0, "maxY": 1613.5, "series": [{"data": [[2806.0, 1285.0], [168.0, 1613.5], [3286.0, 1459.0], [1772.0, 461.5], [1968.0, 848.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3286.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 166.66666666666666, "minX": 1.72054146E12, "maxY": 166.66666666666666, "series": [{"data": [[1.72054146E12, 166.66666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72054146E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 166.66666666666666, "minX": 1.72054146E12, "maxY": 166.66666666666666, "series": [{"data": [[1.72054146E12, 166.66666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72054146E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 166.66666666666666, "minX": 1.72054146E12, "maxY": 166.66666666666666, "series": [{"data": [[1.72054146E12, 166.66666666666666]], "isOverall": false, "label": "singleRequest-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72054146E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 166.66666666666666, "minX": 1.72054146E12, "maxY": 166.66666666666666, "series": [{"data": [[1.72054146E12, 166.66666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72054146E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

